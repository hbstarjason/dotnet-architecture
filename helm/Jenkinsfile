def label = "slave-${UUID.randomUUID().toString()}"

podTemplate(label: label,  serviceAccount: 'admin', containers: [
  containerTemplate(name: 'maven', image: 'maven:3.6-alpine', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'kubectl', image: 'cnych/kubectl', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'helm', image: 'cnych/helm', command: 'cat', ttyEnabled: true)
], volumes: [
  hostPathVolume(mountPath: '/root/.m2', hostPath: '/var/run/m2'),
  hostPathVolume(mountPath: '/home/jenkins/.kube', hostPath: '/root/.kube'),
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')
]) {

node(label) {
    
    stage('单元测试') {
      echo "测试阶段"
    }
    stage('代码编译打包') {
      container('maven') {
        echo "打码编译打包阶段"
      }
    }
    stage('构建 Docker 镜像') {
      container('docker') {
        echo "构建 Docker 镜像阶段"
        sh "docker info"
		sh "cat /etc/issue"
        
      }
    }
    stage('运行 Kubectl') {
      container('kubectl') {
        echo "查看 K8S 集群 Pod 列表"
        sh "kubectl version"
        sh "kubectl delete ns eshop"
        sh "kubectl create ns eshop"
        //sh "cd ~ && git clone https://github.com/hbstarjason/dotnet-architecture -b dev"
        //sh "cd ~/dotnet-architecture/helm/"
	 sh "cd /home/jenkins/dotnet-architecture/helm/"
        sh "deploy-all.sh --skip-image-build --skip-image-push  --tag dev --dns aebb2a74c60f011e989f40282715a665-17894795.us-east-2.elb.amazonaws.com"
  
      }
    }
    stage('运行 Helm') {
      container('helm') {
        echo "查看 Helm Release 列表"
        sh "helm version"
        sh "helm list"
       
      }
    }
  }
}
